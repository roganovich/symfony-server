version: "3.8"

services:
  nginx-service:
    image: nginx:stable-alpine
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    ports:
      - "8080:80"
    volumes:
      - ./../:/var/www/
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php-fpm
    networks:
      - fpm_postgres
  php-fpm:
    container_name: ${COMPOSE_PROJECT_NAME}-php-fpm
    build:
      context: ./../
      dockerfile: ./docker/php-fpm/Dockerfile
      args:
        - PUID=${PUID}
        - PGID=${PGID}
    environment:
      PHP_IDE_CONFIG: "serverName=Docker"
    volumes:
      - /var/www/vendor/
      - ./../:/var/www/
    ports:
      - "9000:9000"
    depends_on:
      - postgres
    networks:
      - fpm_postgres
  postgres:
    container_name: ${COMPOSE_PROJECT_NAME}-postgres
    build:
      context: ./postgres
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data:rw
    networks:
      - fpm_postgres
  rabbitmq:
    container_name: ${COMPOSE_PROJECT_NAME}-rabbitmq
    image: rabbitmq:3.8-management
    ports:
      - 127.0.0.1:15672:15672
      - 127.0.0.1:5672:5672
      - 127.0.0.1:5671:5671
    environment:
      - RABBITMQ_DEFAULT_USER=symfony
      - RABBITMQ_DEFAULT_PASS=symfony
    depends_on:
      - php-fpm
    networks:
      - fpm_postgres
  redis:
    container_name: ${COMPOSE_PROJECT_NAME}-redis
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - cache:/data
    depends_on:
      - php-fpm
    networks:
      - fpm_postgres

volumes:
  db_data:
  cache:
    driver: local

networks: # явно объявленные сети
  fpm_postgres:
    driver: bridge